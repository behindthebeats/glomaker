///////////////////////////////////////////////////////////
//  CompositeView.as
//  Macromedia ActionScript Implementation of the Class CompositeView
//  Generated by Enterprise Architect
//  Created on:      06-Nov-2007 13:48:24
//  Original author: USER
///////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////
// Copyright (c) 2007-09 LTRI, London Metropolitan Uni. All rights reserved.
// An Open Source Release under the GPL v3 licence  (see http://www.gnu.org/licenses/).
// Authors: Tom Boyle, Nils Millahn, Musbah Sagar, Martin Agombar.
// See http://www.glomaker.org for full details
/////////////////////////////////////////////////////////////////////////

package org.glomaker.patternmaker.view
{
	import org.glomaker.patternmaker.events.*;
	
	import org.glomaker.patternmaker.events.ModelEvent;

	/**
	 * ABSTRACT Class (should be subclassed and not instantiated)
	 * @author USER
	 * @version 1.0
	 * @created 06-Nov-2007 13:48:24
	 */
	public class CompositeView extends ComponentView
	{
	    private var aChildren: Array;

	    /**
	     * CONSTRUCTOR
	     * 
	     * @param aModel
	     * @param aController    aController
	     */
	    public function CompositeView(aModel:Object, aController:Object = null)
	    {
			super(aModel, aController);
			aChildren = new Array();
	    }

	    /**
	     * 
	     * @param c    c
	     */
	    override public function add(c:ComponentView): void
	    {
			aChildren.push(c);
	    }

	    /**
	     * 
	     * @param e    e
	     */
	    override public function update(e:ModelEvent = null): void
	    {
			for each(var c:ComponentView in aChildren){
				c.update(e);
			}
	    }

	}//end CompositeView

}